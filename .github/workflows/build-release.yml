name: Build Release

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
      # Allow the job to send a JWT token request to the OIDC provider
      id-token: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.head_ref }}

      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: npm install

      - name: Bump version
        id: bump-version
        run: |
          TAG=$(npm version patch --no-git-tag-version)
          VERSION=${TAG#v}
          jq --arg v "$VERSION" '(.version,.packages[].version) = $v' server.json > tmp && mv tmp server.json
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build assets
        run: npm run build

      - name: Commit build assets
        run: |
          git add package.json package-lock.json server.json
          git commit -m "ci: update build assets (${{ steps.bump-version.outputs.tag }})"
          git push

      - name: Create release
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 # v2.3.3
        with:
          tag_name: ${{ steps.bump-version.outputs.tag }}
          generate_release_notes: true
          make_latest: true

      - name: Publish NPM package
        run: npm publish --no-git-checks --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # DockerHub authentication
      - name: Login to Docker Hub
        id: login-docker
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # AWS Marketplace ECR authentication
      - name: Configure AWS Credentials to deploy to AWS Marketplace ECR
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: ${{ secrets.MARKETPL_AWS_IAM_ROLE_ARN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: ${{ secrets.MARKETPL_ECR_AWS_ACCOUNT_ID }}

      # Build docker image to support multi-architecture (https://aws.amazon.com/blogs/containers/introducing-multi-architecture-container-images-for-amazon-ecr/)
      # Extend Docker build capabilities by using Buildx (https://github.com/docker/buildx)
      - name: Set up QEMU to support multi-architecute builds
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Set GitHub short SHA Tag
        id: vars
        run: echo "short_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Validate Docker Build Configuration
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          call: check

      # Push to DockerHub (per production best practice, remove 'latest' tag)
      # Push to AWS Marketplace-owned ECR Repository (https://docs.aws.amazon.com/marketplace/latest/userguide/container-product-policies.html)
      - name: Build, tag and push to Docker Hub and AWS Marketplace ECR
        env:
          DOCKER_REGISTRY: ${{ github.repository }}
          MARKETPL_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          MARKETPL_REPOSITORY: brave/brave-search-mcp
          IMAGE_RELEASE_TAG: ${{ steps.bump-version.outputs.tag }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          platforms: linux/amd64,linux/aarch64
          push: true
          sbom: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}:${{ env.IMAGE_RELEASE_TAG }}
            ${{ env.DOCKER_REGISTRY }}:${{ github.sha }}
            ${{ env.DOCKER_REGISTRY }}:${{ steps.vars.outputs.short_sha }}
            ${{ env.MARKETPL_REGISTRY }}/${{ env.MARKETPL_REPOSITORY }}:${{ env.IMAGE_RELEASE_TAG }}
            ${{ env.MARKETPL_REGISTRY }}/${{ env.MARKETPL_REPOSITORY }}:${{ github.sha }}
            ${{ env.MARKETPL_REGISTRY }}/${{ env.MARKETPL_REPOSITORY }}:${{ steps.vars.outputs.short_sha }}

      - name: Install MCP Publisher
        run: |
          curl -L "https://github.com/modelcontextprotocol/registry/releases/download/v1.1.0/mcp-publisher_1.1.0_$(uname -s | tr '[:upper:]' '[:lower:]')_$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/').tar.gz" | tar xz mcp-publisher

      - name: Login to MCP Registry
        run: ./mcp-publisher login github-oidc

      - name: Publish to MCP Registry
        run: ./mcp-publisher publish
